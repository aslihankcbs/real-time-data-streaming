package com.aslihankocabas.realtimeprocessing.stockapi;

import com.aslihankocabas.realtimeprocessing.util.HttpResponse;
import com.esotericsoftware.minlog.Log;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;

public class FinnhubApi {

    private static String serverUrl;
    private static Logger logger = LoggerFactory.getLogger(FinnhubApi.class);

    private static final String FINNHUB_TOKEN = "X-Finnhub-Token";
    private static final String APP_JSON_TYPE = "application/json";
    private static final String CONTENT_TYPE = "Content-Type";

    //generated by finnhub dashboard
    private static final String TOKEN = "c792lmiad3iappd7m1hg";

    private static void initializeFinnhubApi() {
        serverUrl = "https://finnhub.io/api/v1/";
    }

    public static String getQuote(String symbol) throws Exception {
        initializeFinnhubApi();
        String urlStr = serverUrl + "quote?symbol=" + symbol;
        HttpResponse response = httpGet(urlStr);
        String quote = "";
        if (response.getResponseCode() != 200) {
            logger.error("Error encountered while fetching quotes");
            throw new IOException(response.getResponseCode() + " ");
        }

        if (!response.getResponse().isEmpty()) {
            quote = response.getResponse().replace("{" ,  "{\"symbol\":\""+symbol+"\",");
        }
        return  quote;
    }

    private static HttpResponse httpGet(String urlStr) throws Exception {
        URL url = new URL(urlStr);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setReadTimeout(600000);
        connection.setConnectTimeout(600000);
        connection.setRequestMethod("GET");
        connection.setDoOutput(true);
        connection.setDoInput(true);
        connection.setUseCaches(false);
        connection.setAllowUserInteraction(false);
        connection.setRequestProperty(FINNHUB_TOKEN, TOKEN);
        connection.setRequestProperty(CONTENT_TYPE, FinnhubApi.APP_JSON_TYPE);

        connection.setRequestProperty("Origin", null);

        try {
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), StandardCharsets.UTF_8));
            String inputLine;
            StringBuilder responseStr = new StringBuilder();

            while ((inputLine = in.readLine()) != null) {
                responseStr.append(inputLine);
            }

            HttpResponse response = new HttpResponse();
            response.setResponseCode(connection.getResponseCode());
            response.setResponse(responseStr.toString());
            return response;
        } catch (IOException e) {
            logger.error("Error encountered from GET request", e);
            throw e;
        }

    }

}
